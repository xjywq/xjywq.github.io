<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Avltree</title>
    <url>/2020/7/2/Avltree/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><ul>
<li><p>平衡树是基于二叉查找树的一种数据结构,添加了更加严格的管理制度用以保证树的高度,即<strong>每一个节点的左右子树深度之差</strong>不超过1.</p>
</li>
<li><p>但是条件可能过于严格,导致插入和删除的操作会导致数据大量的移动.  </p>
<a id="more"></a>
<h2 id="结构实现"><a href="#结构实现" class="headerlink" title="结构实现"></a>结构实现</h2></li>
<li><p>储存方式依旧是二叉树储存,对于每个节点需要添加一个关键字<code>depth</code>用来储存该节点的深度.</p>
</li>
<li><p>对于插入操作,可能会引起深度的变化导致失衡,我们把失衡的节点叫做危机节点,此时需要调整危机节点及周围节点.</p>
</li>
<li><p>对于删除操作,和插入同理.</p>
</li>
<li><p>查找与二叉树相同,此处不在赘述.</p>
</li>
</ul>
<h2 id="代码实例"><a href="#代码实例" class="headerlink" title="代码实例"></a>代码实例</h2><p>选用C++实现avl树的构建.</p>
<h3 id="avl树的构建"><a href="#avl树的构建" class="headerlink" title="avl树的构建"></a>avl树的构建</h3><ul>
<li>对于节点,需要定义两颗子树,数据部分以及深度4个变量.</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">avlTree</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">    &#123;</span></span><br><span class="line">        T content;</span><br><span class="line">        node *left;</span><br><span class="line">        node *right;</span><br><span class="line">        <span class="keyword">int</span> depth;</span><br><span class="line">    &#125;</span><br><span class="line">    node *root;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h3 id="树的基本操作"><a href="#树的基本操作" class="headerlink" title="树的基本操作"></a>树的基本操作</h3><ul>
<li>构造函数和析构函数与普通二叉树相同</li>
<li>查找函数和清空函数也完全相同</li>
</ul>
<h3 id="插入"><a href="#插入" class="headerlink" title="插入"></a>插入</h3><ul>
<li>对于一般的插入,我们只需要从下至上修改节点的深度即可</li>
<li>如果遇到节点失衡,一般来说只会有两种情况<ol>
<li>失衡节点左(右)子树深度大于右(左)子树深度<br>此时我们只需做一次旋转,将失衡节点下放,将深度大的子节点上移即可<br>如图:</li>
</ol>
</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/7/1/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><a id="more"></a>
<h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>markdown_case</title>
    <url>/2020/7/2/markdown-case/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>简单的markdown编辑实例</p>
<a id="more"></a>

<h2 id="1-语言介绍"><a href="#1-语言介绍" class="headerlink" title="1. 语言介绍"></a>1. 语言介绍</h2><p><strong>Markdown</strong> 是一种可以使用普通文本编辑器编写的标记语言, 通过简单的标记语法, 它可以使普通文本内容具有一定的格式.</p>
<h2 id="2-兼容-HTML"><a href="#2-兼容-HTML" class="headerlink" title="2. 兼容 HTML"></a>2. 兼容 HTML</h2><p>Markdown 语法的目标是:成为一种适用于网络的书写语言.</p>
<h2 id="3-标题"><a href="#3-标题" class="headerlink" title="3. 标题"></a>3. 标题</h2><ul>
<li>使用<code>#</code>标记标题, 最多可以有6级标题.</li>
</ul>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># 一级标题</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 二级标题</span></span><br><span class="line"></span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<ul>
<li>使用<code>-</code>或者<code>=</code>标记标题, 仅支持二级标题.</li>
</ul>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">一级标题</span><br><span class="line">==========</span><br><span class="line"></span><br><span class="line">二级标题</span><br><span class="line">----------</span><br></pre></td></tr></table></figure>

<ul>
<li>使用<code>-</code>, <code>=</code>或者<code>*</code>可以指定无序标签</li>
</ul>
<ol>
<li>直接使用数字可以形成有序标签, 值得注意的是, 数字显示的标签与输入的数字无关<ol>
<li>另外, 使用制表符也可以轻易的形成嵌套结构</li>
</ol>
</li>
</ol>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">* </span>使用<span class="code">`-`</span>, <span class="code">`=`</span>或者<span class="code">`*`</span>可以指定无序标签</span><br><span class="line"></span><br><span class="line"><span class="bullet">1. </span>直接使用数字可以形成有序标签, 值得注意的是, 数字显示的标签与输入的数字无关</span><br><span class="line"><span class="bullet">    1. </span>另外, 使用制表符也可以轻易的形成嵌套结构</span><br></pre></td></tr></table></figure>

<h2 id="4-段落"><a href="#4-段落" class="headerlink" title="4. 段落"></a>4. 段落</h2><p>markdown没有特殊的段落格式要求, 主要因为markdown是基于文本构建, 所以不能让文本编辑过于复杂.<br>只需要在段落的最后添加两个空格或者留下一段空行即可换行.</p>
<h2 id="5-字体"><a href="#5-字体" class="headerlink" title="5. 字体"></a>5. 字体</h2><p>markdown支持以下字体:</p>
<ul>
<li><em>斜体文本</em>.</li>
<li><em>斜体文本</em>.</li>
<li><strong>粗体文本</strong>.</li>
<li><strong>粗体文本</strong>.</li>
<li><strong><em>粗斜体文本</em></strong>.</li>
<li><strong><em>粗斜体文本</em></strong>.</li>
<li><del>删除文本</del>.</li>
</ul>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="emphasis">*斜体文本*</span>.</span><br><span class="line"><span class="emphasis">_斜体文本_</span>.</span><br><span class="line"><span class="strong">**粗体文本**</span>.</span><br><span class="line"><span class="strong">__粗体文本__</span>.</span><br><span class="line"><span class="strong">***粗斜体文本**</span>*.</span><br><span class="line"><span class="strong">___粗斜体文本__</span>_.</span><br><span class="line">~~删除文本~~.</span><br></pre></td></tr></table></figure>

<h2 id="6-HTML标签在markdown中的使用"><a href="#6-HTML标签在markdown中的使用" class="headerlink" title="6. HTML标签在markdown中的使用"></a>6. HTML标签在markdown中的使用</h2><p>HTML标签在markdown渲染时会自动转化.</p>
<ul>
<li>我们可以<mark>高亮文字</mark>.</li>
<li>可以<ins>添加文字下划线</ins>.</li>
<li>可以用另一种方法实现<del>删除线</del>.</li>
<li>或者可以<font color="red">修改字体颜色</font>.</li>
<li>为<ruby>生僻<rt>shēng pì</rt></ruby>字添加注音.</li>
</ul>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">* </span>我们可以<span class="xml"><span class="tag">&lt;<span class="name">mark</span>&gt;</span></span>高亮文字<span class="xml"><span class="tag">&lt;/<span class="name">mark</span>&gt;</span></span>.</span><br><span class="line"><span class="bullet">* </span>可以<span class="xml"><span class="tag">&lt;<span class="name">ins</span>&gt;</span></span>添加文字下划线<span class="xml"><span class="tag">&lt;/<span class="name">ins</span>&gt;</span></span>.</span><br><span class="line"><span class="bullet">* </span>可以用另一种方法实现<span class="xml"><span class="tag">&lt;<span class="name">del</span>&gt;</span></span>删除线<span class="xml"><span class="tag">&lt;/<span class="name">del</span>&gt;</span></span>.</span><br><span class="line"><span class="bullet">* </span>或者可以<span class="xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"red"</span>&gt;</span></span>修改字体颜色等等<span class="xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span>.</span><br><span class="line"><span class="bullet">* </span>为<span class="xml"><span class="tag">&lt;<span class="name">ruby</span>&gt;</span></span>生僻<span class="xml"><span class="tag">&lt;<span class="name">rt</span>&gt;</span></span>shēng pì<span class="xml"><span class="tag">&lt;/<span class="name">rt</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">ruby</span>&gt;</span></span>字添加注音.</span><br></pre></td></tr></table></figure>

<h2 id="7-分割线"><a href="#7-分割线" class="headerlink" title="7. 分割线"></a>7. 分割线</h2><p>实现原理很简单, 三个(或以上)连续的<code>-</code>或者<code>*</code>即可.</p>
<hr>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line"><span class="bullet">- </span>- -</span><br><span class="line"><span class="emphasis">***</span></span><br><span class="line"><span class="bullet">* </span><span class="emphasis">* *</span></span><br></pre></td></tr></table></figure>

<h2 id="7-注释"><a href="#7-注释" class="headerlink" title="7. 注释"></a>7. 注释</h2><p>markdown对于文本注释的支持非常好[^非常好].<br>[^非常好]:所有的标注会自动编号并放在文章末尾</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">markdown对于文本注释的支持非常好[^非常好].</span><br><span class="line">[<span class="symbol">^非常好</span>]:<span class="link">所有的标注会自动编号并放在文章末尾</span></span><br></pre></td></tr></table></figure>

<h2 id="8-代码区"><a href="#8-代码区" class="headerlink" title="8. 代码区"></a>8. 代码区</h2><p>使用 ` 符号可以形成行内代码词, 而三个 ` 则会形成代码块.<br>或者直接使用制表符(4个空格)加在每行前面可以达到同样代码块的效果.</p>
<h2 id="9-表格"><a href="#9-表格" class="headerlink" title="9. 表格"></a>9. 表格</h2><p>使用<code>|</code>符号来制作表格, 使用<code>:</code>来提示对齐方向.</p>
<table>
<thead>
<tr>
<th align="left">姓名</th>
<th align="center">班级</th>
<th align="right">成绩</th>
</tr>
</thead>
<tbody><tr>
<td align="left">xjywq</td>
<td align="center">1</td>
<td align="right">100</td>
</tr>
</tbody></table>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">姓名|班级|成绩</span><br><span class="line">:----|:----:|----:</span><br><span class="line">xjywq|1|100</span><br></pre></td></tr></table></figure>

<h2 id="10-链接"><a href="#10-链接" class="headerlink" title="10. 链接"></a>10. 链接</h2><ul>
<li>可以使用<code>[]</code>符号管理显示的链接名称, <code>()</code>符号管理链接方向, <code>&quot;&quot;</code>符号管理链接标题, 如<a href="www.baidu.com" title="百度搜索">百度</a>.</li>
</ul>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">[<span class="string">百度</span>](<span class="link">www.baidu.com "百度搜索"</span>)</span><br></pre></td></tr></table></figure>

<ul>
<li>或者可以用<code>&lt;&gt;</code>显式指定链接, 如<a href="http://www.baidu.com" target="_blank" rel="noopener">http://www.baidu.com</a>.</li>
</ul>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">http:</span>//<span class="attr">www.baidu.com</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<ul>
<li>或者可以使用注释类型, 将7和10结合, 如<a href="www.baidu.com" title="百度搜索">百度</a>, 但是注释之间必须留一个空行.</li>
</ul>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">[<span class="string">百度</span>][<span class="symbol">baidu</span>]</span><br><span class="line"></span><br><span class="line">[<span class="symbol">baidu</span>]:<span class="link">www.baidu.com "百度搜索"</span></span><br></pre></td></tr></table></figure>

<h2 id="11-图片"><a href="#11-图片" class="headerlink" title="11. 图片"></a>11. 图片</h2><ul>
<li>使用链接的格式, 但是在开头加上<code>!</code>, 链接地址使用本地路径(支持绝对路径与相对路径), 在hexo上无法正确显示, 需要文件的相对位置, 且位置起始地址为sourse文件夹下.</li>
</ul>
<p><img src="/picture/markdown-case/%E9%BA%BB%E8%A1%A3%E5%AD%A6%E5%A7%90.jpg" alt="麻衣学姐"></p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">普通markdown文件中:</span><br><span class="line">![<span class="string">麻衣学姐</span>](<span class="link">/markdown-case/麻衣学姐.jpg</span>)</span><br><span class="line"></span><br><span class="line">在hexo中则是:</span><br><span class="line">![<span class="string">麻衣学姐</span>](<span class="link">/picture/markdown-case/麻衣学姐.jpg</span>)</span><br></pre></td></tr></table></figure>

<ul>
<li>使用在线图床, 同上</li>
</ul>
<p><img src="https://ss1.bdstatic.com/70cFvXSh_Q1YnxGkpoWK1HF6hhy/it/u=838706023,3015528324&fm=26&gp=0.jpg" alt="麻衣学姐" title="这是我的老婆"></p>
<ul>
<li>使用HTML语法</li>
</ul>
<img src="https://ss1.bdstatic.com/70cFvXSh_Q1YnxGkpoWK1HF6hhy/it/u=838706023,3015528324&fm=26&gp=0.jpg" alt = "麻衣学姐">

<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://ss1.bdstatic.com/70cFvXSh_Q1YnxGkpoWK1HF6hhy/it/u=838706023,3015528324&amp;fm=26&amp;gp=0.jpg"</span> <span class="attr">alt</span> = <span class="string">"麻衣学姐"</span>&gt;</span></span></span><br></pre></td></tr></table></figure>]]></content>
  </entry>
</search>
